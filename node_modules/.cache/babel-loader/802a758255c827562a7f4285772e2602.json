{"remainingRequest":"/var/www/node_modules/babel-loader/lib/index.js!/var/www/node_modules/eslint-loader/index.js??ref--13-0!/var/www/src/app/Api/User.js","dependencies":[{"path":"/var/www/src/app/Api/User.js","mtime":1587310904000},{"path":"/var/www/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlcXVlc3QgZnJvbSAiLi4vcmVxdWVzdC1tZXRob2RzIjsKdmFyIFJFUVVFU1QgPSBuZXcgUmVxdWVzdCgpOwovKioKICog0J/QvtC70YPRh9C10L3QuNC1INCy0YHQtdGFINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5CiAqIEBwYXJhbSB7b2JqZWN0fWRhdGEKICogQHJldHVybnMge1Byb21pc2U8dW5rbm93bj59CiAqLwoKZXhwb3J0IHZhciBnZXRUZW5Vc2VycyA9IGZ1bmN0aW9uIGdldFRlblVzZXJzKGRhdGEpIHsKICByZXR1cm4gUkVRVUVTVC5jcmVhdGUoImdldCIsICJhcGkvZ2V0VXNlcnMiLCBkYXRhKTsKfTsKLyoqCiAqINCf0L7Qu9GD0YfQtdC90LjQtSDQtNCw0L3QvdGL0YUg0L7QtNC90L7Qs9C+INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjwogKiBAcGFyYW0gZGF0YQogKiBAcmV0dXJucyB7UHJvbWlzZTx1bmtub3duPn0KICovCgpleHBvcnQgdmFyIGdldE9uZVVzZXIgPSBmdW5jdGlvbiBnZXRPbmVVc2VyKGRhdGEpIHsKICByZXR1cm4gUkVRVUVTVC5jcmVhdGUoImdldFBhcmFtcyIsICJhcGkvZ2V0T25lVXNlciIsIGRhdGEpOwp9OwovKioKICog0J7QsdC90L7QstC70LXQvdC40LUg0LTQsNC90L3Ri9GFINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjwogKiBAcGFyYW0gZGF0YQogKiBAcmV0dXJucyB7UHJvbWlzZTx1bmtub3duPn0KICovCgpleHBvcnQgdmFyIHVwZGF0ZVVzZXJEYXRhID0gZnVuY3Rpb24gdXBkYXRlVXNlckRhdGEoZGF0YSkgewogIHJldHVybiBSRVFVRVNULmNyZWF0ZSgicG9zdCIsICJhcGkvdXBkYXRlVXNlckRhdGEiLCBkYXRhKTsKfTsKLyoqCiAqINCj0LTQsNC70LXQvdC40LUg0LTQsNC90L3Ri9GFINC+0LTQvdC+0LPQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8KICogQHBhcmFtIGRhdGEKICogQHJldHVybnMge1Byb21pc2U8dW5rbm93bj59CiAqLwoKZXhwb3J0IHZhciBkZWxldGVVc2VyRGF0YSA9IGZ1bmN0aW9uIGRlbGV0ZVVzZXJEYXRhKGRhdGEpIHsKICByZXR1cm4gUkVRVUVTVC5jcmVhdGUoImdldFBhcmFtcyIsICIvYXBpL2RlbGV0ZVVzZXIiLCBkYXRhKTsKfTs="},{"version":3,"sources":["/var/www/src/app/Api/User.js"],"names":["Request","REQUEST","getTenUsers","data","create","getOneUser","updateUserData","deleteUserData"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,IAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AACA;;;;;;AAKA,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA,SAAIF,OAAO,CAACG,MAAR,CAAe,KAAf,EAAsB,cAAtB,EAAsCD,IAAtC,CAAJ;AAAA,CAAxB;AAEP;;;;;;AAKA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAAF,IAAI;AAAA,SAC5BF,OAAO,CAACG,MAAR,CAAe,WAAf,EAA4B,gBAA5B,EAA8CD,IAA9C,CAD4B;AAAA,CAAvB;AAGP;;;;;;AAKA,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAAH,IAAI;AAAA,SAChCF,OAAO,CAACG,MAAR,CAAe,MAAf,EAAuB,oBAAvB,EAA6CD,IAA7C,CADgC;AAAA,CAA3B;AAGP;;;;;;AAKA,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAAJ,IAAI;AAAA,SAChCF,OAAO,CAACG,MAAR,CAAe,WAAf,EAA4B,iBAA5B,EAA+CD,IAA/C,CADgC;AAAA,CAA3B","sourcesContent":["import Request from \"../request-methods\";\nconst REQUEST = new Request();\n/**\n * Получение всех пользователей\n * @param {object}data\n * @returns {Promise<unknown>}\n */\nexport const getTenUsers = data => REQUEST.create(\"get\", \"api/getUsers\", data);\n\n/**\n * Получение данных одного пользователя\n * @param data\n * @returns {Promise<unknown>}\n */\nexport const getOneUser = data =>\n  REQUEST.create(\"getParams\", \"api/getOneUser\", data);\n\n/**\n * Обновление данных пользователя\n * @param data\n * @returns {Promise<unknown>}\n */\nexport const updateUserData = data =>\n  REQUEST.create(\"post\", \"api/updateUserData\", data);\n\n/**\n * Удаление данных одного пользователя\n * @param data\n * @returns {Promise<unknown>}\n */\nexport const deleteUserData = data =>\n  REQUEST.create(\"getParams\", \"/api/deleteUser\", data);\n"]}]}