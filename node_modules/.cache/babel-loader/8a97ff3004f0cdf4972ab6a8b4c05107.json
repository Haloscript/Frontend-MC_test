{"remainingRequest":"/var/www/node_modules/babel-loader/lib/index.js!/var/www/node_modules/eslint-loader/index.js??ref--13-0!/var/www/src/store/modules/modals.js","dependencies":[{"path":"/var/www/src/store/modules/modals.js","mtime":1587288469000},{"path":"/var/www/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHN0YXRlID0gewogIHR5cGU6ICIiLAogIGNvbnRlbnQ6IGZhbHNlLAogIGVkaXRhYmxlRGF0YTogbnVsbCwKICBwbGFjZUNhbGw6IG51bGwKfTsKdmFyIGdldHRlcnMgPSB7CiAgZ2V0QmFzZU1vZGFsOiBmdW5jdGlvbiBnZXRCYXNlTW9kYWwoc3RhdGUpIHsKICAgIHJldHVybiBmdW5jdGlvbiAobmFtZSkgewogICAgICByZXR1cm4gc3RhdGVbbmFtZV07CiAgICB9OwogIH0KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBzZXRCYXNlTW9kYWw6IGZ1bmN0aW9uIHNldEJhc2VNb2RhbChzdGF0ZSwgX3JlZikgewogICAgdmFyIHR5cGUgPSBfcmVmLnR5cGUsCiAgICAgICAgZGF0YSA9IF9yZWYuZGF0YTsKICAgIHN0YXRlW3R5cGVdID0gZGF0YTsKICB9Cn07CnZhciBhY3Rpb25zID0ge307CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["/var/www/src/store/modules/modals.js"],"names":["state","type","content","editableData","placeCall","getters","getBaseModal","name","mutations","setBaseModal","data","actions"],"mappings":"AAAA,IAAMA,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,EADM;AAEZC,EAAAA,OAAO,EAAE,KAFG;AAGZC,EAAAA,YAAY,EAAE,IAHF;AAIZC,EAAAA,SAAS,EAAE;AAJC,CAAd;AAMA,IAAMC,OAAO,GAAG;AACdC,EAAAA,YAAY,EAAE,sBAAAN,KAAK;AAAA,WAAI,UAAAO,IAAI;AAAA,aAAIP,KAAK,CAACO,IAAD,CAAT;AAAA,KAAR;AAAA;AADL,CAAhB;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,YADgB,wBACHT,KADG,QACoB;AAAA,QAAdC,IAAc,QAAdA,IAAc;AAAA,QAARS,IAAQ,QAARA,IAAQ;AAClCV,IAAAA,KAAK,CAACC,IAAD,CAAL,GAAcS,IAAd;AACD;AAHe,CAAlB;AAKA,IAAMC,OAAO,GAAG,EAAhB;AACA,eAAe;AACbX,EAAAA,KAAK,EAALA,KADa;AAEbK,EAAAA,OAAO,EAAPA,OAFa;AAGbG,EAAAA,SAAS,EAATA,SAHa;AAIbG,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["const state = {\n  type: \"\",\n  content: false,\n  editableData: null,\n  placeCall: null\n};\nconst getters = {\n  getBaseModal: state => name => state[name]\n};\nconst mutations = {\n  setBaseModal(state, { type, data }) {\n    state[type] = data;\n  }\n};\nconst actions = {};\nexport default {\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]}]}