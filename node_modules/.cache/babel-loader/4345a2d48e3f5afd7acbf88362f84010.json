{"remainingRequest":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/babel-loader/lib/index.js!/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/eslint-loader/index.js??ref--13-0!/Users/maxshevlyakov/myProjects/Frontend-MC_test/src/store/modules/base.js","dependencies":[{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/src/store/modules/base.js","mtime":1587310615836},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/maxshevlyakov/myProjects/Frontend-MC_test/src/store/modules/base.js"],"names":["UserService","GoodService","USERSERVICE","GOODSERVICE","state","userListData","page","activeItems","filter","sortPrice","sortCount","sorted","selectUserData","createUserData","lastName","firstName","middleName","position","user_good","getters","getBaseData","name","getSelectedData","getCreateUserData","mutations","setBaseData","type","data","setSelectedData","setCreateUserData","actions","getTenUsers","commit","startSort","Promise","resolve","reject","getTenUsersData","then","res","catch","err","getOneUser","userId","getOneUserData","user","addDataOnGoodTable","placeCall","getBaseModal","currentData","pushedData","title","goodName","price","Number","goodPrice","registrationDate","Date","goodDate","newGoodArray","concat","editDataOnGoodTable","changeDataIndex","findIndex","good","id","good_id","Math","floor","random","splice","deleteOneGoodOnState","index","deleteOneGoodData","console","log","saveUserAllData","dispatch","currentMutation","updateUserAllData","users","length","reduce","prev","charAt","deleteSelectUserData","userIndex","clearState","setTimeout"],"mappings":"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","sourcesContent":["import { UserService } from \"../../app/services/UserService\";\nimport { GoodService } from \"../../app/services/GoodService\";\nconst USERSERVICE = new UserService();\nconst GOODSERVICE = new GoodService();\n\nconst state = {\n  userListData: null,\n  page: 1,\n  activeItems: [],\n  filter: \"\",\n  sortPrice: \"asc\",\n  sortCount: \"asc\",\n  sorted: \"\",\n  selectUserData: null,\n  createUserData: {\n    lastName: \"\",\n    firstName: \"\",\n    middleName: \"\",\n    position: \"\",\n    user_good: []\n  }\n};\nconst getters = {\n  getBaseData: state => name => state[name],\n  getSelectedData: state => name => state.selectUserData[name],\n  getCreateUserData: state => name => state.createUserData[name]\n};\nconst mutations = {\n  setBaseData(state, { type, data }) {\n    state[type] = data;\n  },\n  setSelectedData(state, { type, data }) {\n    state.selectUserData[type] = data;\n  },\n  setCreateUserData(state, { type, data }) {\n    state.createUserData[type] = data;\n  }\n};\nconst actions = {\n  /**\n   * Получение всех работников\n   * @param state\n   * @param commit\n   * @param startSort\n   * @returns {Promise<unknown>}\n   */\n  getTenUsers({ state, commit }, startSort = false) {\n    return new Promise((resolve, reject) => {\n      USERSERVICE.getTenUsersData(\n        state.page,\n        state.filter,\n        startSort ? state.sorted : \"\",\n        state.sortPrice,\n        state.sortCount\n      )\n        .then(res => {\n          commit(\"setBaseData\", { type: \"userListData\", data: res });\n          resolve();\n        })\n        .catch(err => reject(err));\n    });\n  },\n  /**\n   * Получение информации по одному работнику\n   * @param commit\n   * @param {number}userId\n   * @returns {Promise<unknown>}\n   */\n  getOneUser({ commit }, userId) {\n    return new Promise((resolve, reject) => {\n      USERSERVICE.getOneUserData(userId)\n        .then(user =>\n          commit(\"setBaseData\", { type: \"selectUserData\", data: user })\n        )\n        .catch(err => reject(err));\n    });\n  },\n  /**\n   * Добавление данных в таблицу мц пользователя вызов из модалки \"addAndEditGoodModal\"\n   * @param state\n   * @param commit\n   * @param getters\n   * @param {object} data\n   */\n  addDataOnGoodTable({ state, commit, getters }, data) {\n    const placeCall = getters.getBaseModal(\"placeCall\");\n    const currentData = `${\n      placeCall === \"createUserModal\" ? \"createUserData\" : \"selectUserData\"\n    }`;\n    const pushedData = {\n      title: data.goodName,\n      price: Number(data.goodPrice),\n      registrationDate: new Date(data.goodDate)\n    };\n    const newGoodArray = state[currentData].user_good.concat(pushedData);\n    if (placeCall === \"createUserModal\") {\n      commit(\"setCreateUserData\", { type: \"user_good\", data: newGoodArray });\n      commit(\"setBaseModal\", { type: \"type\", data: \"addUser\" });\n    } else {\n      commit(\"setSelectedData\", { type: \"user_good\", data: newGoodArray });\n\n      commit(\"setBaseModal\", { type: \"type\", data: \"onePerson\" });\n    }\n  },\n  /**\n   * Редактирование данных мц по айдишнику, вызов из модалки \"addAndEditGoodModal\"\n   * @param state\n   * @param commit\n   * @param {object} data\n   */\n  editDataOnGoodTable({ state, commit }, data) {\n    const changeDataIndex = state.selectUserData.user_good.findIndex(\n      good => good.id === data.good_id\n    );\n    const pushedData = {\n      id: Math.floor(Math.random() * Math.floor(20)),\n      title: data.goodName,\n      price: Number(data.goodPrice),\n      registrationDate: new Date(data.goodDate)\n    };\n    state.selectUserData.user_good.splice(changeDataIndex, 1, pushedData);\n    commit(\"setBaseModal\", { type: \"type\", data: \"onePerson\" });\n  },\n  /**\n   * Удаление и отвязка мц от пользователя\n   * @param state\n   * @param {object} data\n   */\n  deleteOneGoodOnState({ state }, data) {\n    state.selectUserData.user_good.splice(data.index, 1);\n    GOODSERVICE.deleteOneGoodData(data.id)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  },\n  /**\n   * Изминение или создание  пользовательских данных  и пуш их в таблицу\n   * @param state\n   * @param commit\n   * @param dispatch\n   * @param {string}type\n   * @returns {Promise<unknown>}\n   */\n  saveUserAllData({ state, commit, dispatch }, type = \"edit\") {\n    return new Promise((resolve, reject) => {\n      const currentData = `${\n        type === \"create\" ? \"createUserData\" : \"selectUserData\"\n      }`;\n      const currentMutation = `${\n        type === \"create\" ? \"setCreateUserData\" : \"setSelectedData\"\n      }`;\n\n      USERSERVICE.updateUserAllData(state[currentData])\n        .then(res => console.log(res))\n        .catch(err => reject(err));\n      const changeDataIndex = state.userListData.users.findIndex(\n        user => user.id === state[currentData].id\n      );\n\n      commit(currentMutation, {\n        type: \"good_count\",\n        data: state[currentData].user_good.length\n      });\n      commit(currentMutation, {\n        type: \"total_price\",\n        data: state[currentData].user_good.reduce(\n          (prev, good) => prev + good.price,\n          0\n        )\n      });\n      commit(currentMutation, {\n        type: \"fullName\",\n        data: `${state[currentData].lastName}.${state[\n          currentData\n        ].firstName.charAt(0)}${\n          state[currentData].middleName ? \".\" : \"\"\n        }${state[currentData].middleName.charAt(0)}`\n      });\n      if (type === \"create\") {\n        console.log(\"====\", currentData);\n        state.userListData.users.concat(state[currentData]);\n        dispatch(\"clearState\", type);\n        resolve();\n      }\n      state.userListData.users.splice(changeDataIndex, 1, state[currentData]);\n      dispatch(\"clearState\", type);\n      resolve();\n    });\n  },\n  /**\n   * Удаление работника\n   * @param state\n   * @param getters\n   */\n  deleteSelectUserData({ state, getters }) {\n    const data = getters.getBaseModal(\"editableData\");\n    const userIndex = state.userListData.users.findIndex(\n      user => user.id === data.id\n    );\n    state.userListData.users.splice(userIndex, 1);\n    // USERSERVICE.deleteFullUserData(data.id)\n    //   .then(() => {})\n    //   .catch(() => {});\n  },\n  clearState({ state }, type) {\n    setTimeout(() => {\n      if (type === \"create\") {\n        state.createUserData = {\n          lastName: \"\",\n          firstName: \"\",\n          middleName: \"\",\n          position: \"\",\n          user_good: []\n        };\n        return;\n      }\n      state.selectUserData = null;\n    }, 1500);\n  }\n};\n\nexport default {\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]}]}