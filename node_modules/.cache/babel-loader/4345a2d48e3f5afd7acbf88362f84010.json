{"remainingRequest":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/babel-loader/lib/index.js!/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/eslint-loader/index.js??ref--13-0!/Users/maxshevlyakov/myProjects/Frontend-MC_test/src/store/modules/base.js","dependencies":[{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/src/store/modules/base.js","mtime":1587243905813},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgeyBVc2VyU2VydmljZSB9IGZyb20gIi4uLy4uL2FwcC9zZXJ2aWNlcy9Vc2VyU2VydmljZSI7CmltcG9ydCB7IEdvb2RTZXJ2aWNlIH0gZnJvbSAiLi4vLi4vYXBwL3NlcnZpY2VzL0dvb2RTZXJ2aWNlIjsKdmFyIFVTRVJTRVJWSUNFID0gbmV3IFVzZXJTZXJ2aWNlKCk7CnZhciBHT09EU0VSVklDRSA9IG5ldyBHb29kU2VydmljZSgpOwp2YXIgc3RhdGUgPSB7CiAgdXNlckxpc3REYXRhOiBudWxsLAogIHBhZ2U6IDEsCiAgYWN0aXZlSXRlbXM6IFtdLAogIHNlbGVjdFVzZXJEYXRhOiBudWxsCn07CnZhciBnZXR0ZXJzID0gewogIGdldEJhc2VEYXRhOiBmdW5jdGlvbiBnZXRCYXNlRGF0YShzdGF0ZSkgewogICAgcmV0dXJuIGZ1bmN0aW9uIChuYW1lKSB7CiAgICAgIHJldHVybiBzdGF0ZVtuYW1lXTsKICAgIH07CiAgfSwKICBnZXRTZWxlY3RlZERhdGE6IGZ1bmN0aW9uIGdldFNlbGVjdGVkRGF0YShzdGF0ZSkgewogICAgcmV0dXJuIGZ1bmN0aW9uIChuYW1lKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zZWxlY3RVc2VyRGF0YVtuYW1lXTsKICAgIH07CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHNldEJhc2VEYXRhOiBmdW5jdGlvbiBzZXRCYXNlRGF0YShzdGF0ZSwgX3JlZikgewogICAgdmFyIHR5cGUgPSBfcmVmLnR5cGUsCiAgICAgICAgZGF0YSA9IF9yZWYuZGF0YTsKICAgIHN0YXRlW3R5cGVdID0gZGF0YTsKICB9LAogIHNldFNlbGVjdGVkRGF0YTogZnVuY3Rpb24gc2V0U2VsZWN0ZWREYXRhKHN0YXRlLCBfcmVmMikgewogICAgdmFyIHR5cGUgPSBfcmVmMi50eXBlLAogICAgICAgIGRhdGEgPSBfcmVmMi5kYXRhOwogICAgc3RhdGUuc2VsZWN0VXNlckRhdGFbdHlwZV0gPSBkYXRhOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgLyoqCiAgICog0J/QvtC70YPRh9C10L3QuNC1INCy0YHQtdGFINGA0LDQsdC+0YLQvdC40LrQvtCyCiAgICogQHBhcmFtIHN0YXRlCiAgICogQHBhcmFtIGNvbW1pdAogICAqIEByZXR1cm5zIHtQcm9taXNlPHVua25vd24+fQogICAqLwogIGdldFRlblVzZXJzOiBmdW5jdGlvbiBnZXRUZW5Vc2VycyhfcmVmMykgewogICAgdmFyIHN0YXRlID0gX3JlZjMuc3RhdGUsCiAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgVVNFUlNFUlZJQ0UuZ2V0VGVuVXNlcnNEYXRhKHN0YXRlLnBhZ2UpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbW1pdCgic2V0QmFzZURhdGEiLCB7CiAgICAgICAgICB0eXBlOiAidXNlckxpc3REYXRhIiwKICAgICAgICAgIGRhdGE6IHJlcwogICAgICAgIH0pOwogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIHJldHVybiByZWplY3QoZXJyKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAoKICAvKioKICAgKiDQn9C+0LvRg9GH0LXQvdC40LUg0LjQvdGE0L7RgNC80LDRhtC40Lgg0L/QviDQvtC00L3QvtC80YMg0YDQsNCx0L7RgtC90LjQutGDCiAgICogQHBhcmFtIGNvbW1pdAogICAqIEBwYXJhbSB7bnVtYmVyfXVzZXJJZAogICAqIEByZXR1cm5zIHtQcm9taXNlPHVua25vd24+fQogICAqLwogIGdldE9uZVVzZXI6IGZ1bmN0aW9uIGdldE9uZVVzZXIoX3JlZjQsIHVzZXJJZCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIFVTRVJTRVJWSUNFLmdldE9uZVVzZXJEYXRhKHVzZXJJZCkudGhlbihmdW5jdGlvbiAodXNlcikgewogICAgICAgIHJldHVybiBjb21taXQoInNldEJhc2VEYXRhIiwgewogICAgICAgICAgdHlwZTogInNlbGVjdFVzZXJEYXRhIiwKICAgICAgICAgIGRhdGE6IHVzZXIKICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIHJldHVybiByZWplY3QoZXJyKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAogIGFkZERhdGFPbkdvb2RUYWJsZTogZnVuY3Rpb24gYWRkRGF0YU9uR29vZFRhYmxlKF9yZWY1LCBkYXRhKSB7CiAgICB2YXIgc3RhdGUgPSBfcmVmNS5zdGF0ZSwKICAgICAgICBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICB2YXIgcHVzaGVkRGF0YSA9IHsKICAgICAgLy8gaWQ6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1hdGguZmxvb3IoMjApKSwKICAgICAgdGl0bGU6IGRhdGEuZ29vZE5hbWUsCiAgICAgIHByaWNlOiBOdW1iZXIoZGF0YS5nb29kUHJpY2UpLAogICAgICByZWdpc3RyYXRpb25EYXRlOiBuZXcgRGF0ZShkYXRhLmdvb2REYXRlKQogICAgfTsKICAgIHZhciBuZXdHb29kQXJyYXkgPSBzdGF0ZS5zZWxlY3RVc2VyRGF0YS51c2VyX2dvb2QuY29uY2F0KHB1c2hlZERhdGEpOwogICAgY29tbWl0KCJzZXRTZWxlY3RlZERhdGEiLCB7CiAgICAgIHR5cGU6ICJ1c2VyX2dvb2QiLAogICAgICBkYXRhOiBuZXdHb29kQXJyYXkKICAgIH0pOwogICAgY29tbWl0KCJzZXRCYXNlTW9kYWwiLCB7CiAgICAgIHR5cGU6ICJ0eXBlIiwKICAgICAgZGF0YTogIm9uZVBlcnNvbiIKICAgIH0pOyAvLyBHT09EU0VSVklDRS5hZGRHb29kRGF0YU9uVXNlcih7CiAgICAvLyAgIG93bmVyX2lkOiBzdGF0ZS5zZWxlY3RVc2VyRGF0YS5pZCwKICAgIC8vICAgLi4ucHVzaGVkRGF0YQogICAgLy8gfSk7CiAgfSwKICBlZGl0RGF0YU9uR29vZFRhYmxlOiBmdW5jdGlvbiBlZGl0RGF0YU9uR29vZFRhYmxlKF9yZWY2LCBkYXRhKSB7CiAgICB2YXIgc3RhdGUgPSBfcmVmNi5zdGF0ZSwKICAgICAgICBjb21taXQgPSBfcmVmNi5jb21taXQ7CiAgICB2YXIgY2hhbmdlRGF0YUluZGV4ID0gc3RhdGUuc2VsZWN0VXNlckRhdGEudXNlcl9nb29kLmZpbmRJbmRleChmdW5jdGlvbiAoZ29vZCkgewogICAgICByZXR1cm4gZ29vZC5pZCA9PT0gZGF0YS5nb29kX2lkOwogICAgfSk7CiAgICB2YXIgcHVzaGVkRGF0YSA9IHsKICAgICAgaWQ6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1hdGguZmxvb3IoMjApKSwKICAgICAgdGl0bGU6IGRhdGEuZ29vZE5hbWUsCiAgICAgIHByaWNlOiBOdW1iZXIoZGF0YS5nb29kUHJpY2UpLAogICAgICByZWdpc3RyYXRpb25EYXRlOiBuZXcgRGF0ZShkYXRhLmdvb2REYXRlKQogICAgfTsKICAgIHN0YXRlLnNlbGVjdFVzZXJEYXRhLnVzZXJfZ29vZC5zcGxpY2UoY2hhbmdlRGF0YUluZGV4LCAxLCBwdXNoZWREYXRhKTsKICAgIGNvbW1pdCgic2V0QmFzZU1vZGFsIiwgewogICAgICB0eXBlOiAidHlwZSIsCiAgICAgIGRhdGE6ICJvbmVQZXJzb24iCiAgICB9KTsKICB9LAogIGRlbGV0ZU9uZUdvb2RPblN0YXRlOiBmdW5jdGlvbiBkZWxldGVPbmVHb29kT25TdGF0ZShfcmVmNywgZGF0YSkgewogICAgdmFyIHN0YXRlID0gX3JlZjcuc3RhdGU7CiAgICBzdGF0ZS5zZWxlY3RVc2VyRGF0YS51c2VyX2dvb2Quc3BsaWNlKGRhdGEuaW5kZXgsIDEpOwogICAgR09PRFNFUlZJQ0UuZGVsZXRlT25lR29vZERhdGEoZGF0YS5pZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHJldHVybiBjb25zb2xlLmxvZyhyZXMpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyKTsKICAgIH0pOwogIH0sCiAgc2F2ZVVzZXJBbGxEYXRhOiBmdW5jdGlvbiBzYXZlVXNlckFsbERhdGEoX3JlZjgpIHsKICAgIHZhciBzdGF0ZSA9IF9yZWY4LnN0YXRlLAogICAgICAgIGNvbW1pdCA9IF9yZWY4LmNvbW1pdDsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIFVTRVJTRVJWSUNFLnVwZGF0ZVVzZXJBbGxEYXRhKHN0YXRlLnNlbGVjdFVzZXJEYXRhKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5sb2cocmVzKTsKICAgICAgfSk7CiAgICAgIHZhciBjaGFuZ2VEYXRhSW5kZXggPSBzdGF0ZS51c2VyTGlzdERhdGEudXNlcnMuZmluZEluZGV4KGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgcmV0dXJuIHVzZXIuaWQgPT09IHN0YXRlLnNlbGVjdFVzZXJEYXRhLmlkOwogICAgICB9KTsKICAgICAgY29tbWl0KCJzZXRTZWxlY3RlZERhdGEiLCB7CiAgICAgICAgdHlwZTogImdvb2RfY291bnQiLAogICAgICAgIGRhdGE6IHN0YXRlLnNlbGVjdFVzZXJEYXRhLnVzZXJfZ29vZC5sZW5ndGgKICAgICAgfSk7CiAgICAgIGNvbW1pdCgic2V0U2VsZWN0ZWREYXRhIiwgewogICAgICAgIHR5cGU6ICJ0b3RhbF9wcmljZSIsCiAgICAgICAgZGF0YTogc3RhdGUuc2VsZWN0VXNlckRhdGEudXNlcl9nb29kLnJlZHVjZShmdW5jdGlvbiAocHJldiwgZ29vZCkgewogICAgICAgICAgcmV0dXJuIHByZXYgKyBnb29kLnByaWNlOwogICAgICAgIH0sIDApCiAgICAgIH0pOwogICAgICBjb21taXQoInNldFNlbGVjdGVkRGF0YSIsIHsKICAgICAgICB0eXBlOiAiZnVsbE5hbWUiLAogICAgICAgIGRhdGE6ICIiLmNvbmNhdChzdGF0ZS5zZWxlY3RVc2VyRGF0YS5sYXN0TmFtZSwgIi4iKS5jb25jYXQoc3RhdGUuc2VsZWN0VXNlckRhdGEuZmlyc3ROYW1lLmNoYXJBdCgwKSkuY29uY2F0KHN0YXRlLnNlbGVjdFVzZXJEYXRhLm1pZGRsZU5hbWUgPyAiLiIgOiAiIikuY29uY2F0KHN0YXRlLnNlbGVjdFVzZXJEYXRhLm1pZGRsZU5hbWUuY2hhckF0KDApKQogICAgICB9KTsKICAgICAgc3RhdGUudXNlckxpc3REYXRhLnVzZXJzLnNwbGljZShjaGFuZ2VEYXRhSW5kZXgsIDEsIHN0YXRlLnNlbGVjdFVzZXJEYXRhKTsKICAgICAgcmVzb2x2ZSgpOwogICAgICByZWplY3QoKTsKICAgIH0pOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMKfTs="},{"version":3,"sources":["/Users/maxshevlyakov/myProjects/Frontend-MC_test/src/store/modules/base.js"],"names":["UserService","GoodService","USERSERVICE","GOODSERVICE","state","userListData","page","activeItems","selectUserData","getters","getBaseData","name","getSelectedData","mutations","setBaseData","type","data","setSelectedData","actions","getTenUsers","commit","Promise","resolve","reject","getTenUsersData","then","res","catch","err","getOneUser","userId","getOneUserData","user","addDataOnGoodTable","pushedData","title","goodName","price","Number","goodPrice","registrationDate","Date","goodDate","newGoodArray","user_good","concat","editDataOnGoodTable","changeDataIndex","findIndex","good","id","good_id","Math","floor","random","splice","deleteOneGoodOnState","index","deleteOneGoodData","console","log","saveUserAllData","updateUserAllData","users","length","reduce","prev","lastName","firstName","charAt","middleName"],"mappings":"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","sourcesContent":["import { UserService } from \"../../app/services/UserService\";\nimport { GoodService } from \"../../app/services/GoodService\";\nconst USERSERVICE = new UserService();\nconst GOODSERVICE = new GoodService();\n\nconst state = {\n  userListData: null,\n  page: 1,\n  activeItems: [],\n  selectUserData: null\n};\nconst getters = {\n  getBaseData: state => name => state[name],\n  getSelectedData: state => name => state.selectUserData[name]\n};\nconst mutations = {\n  setBaseData(state, { type, data }) {\n    state[type] = data;\n  },\n  setSelectedData(state, { type, data }) {\n    state.selectUserData[type] = data;\n  }\n};\nconst actions = {\n  /**\n   * Получение всех работников\n   * @param state\n   * @param commit\n   * @returns {Promise<unknown>}\n   */\n  getTenUsers({ state, commit }) {\n    return new Promise((resolve, reject) => {\n      USERSERVICE.getTenUsersData(state.page)\n        .then(res => {\n          commit(\"setBaseData\", { type: \"userListData\", data: res });\n          resolve();\n        })\n        .catch(err => reject(err));\n    });\n  },\n  /**\n   * Получение информации по одному работнику\n   * @param commit\n   * @param {number}userId\n   * @returns {Promise<unknown>}\n   */\n  getOneUser({ commit }, userId) {\n    return new Promise((resolve, reject) => {\n      USERSERVICE.getOneUserData(userId)\n        .then(user =>\n          commit(\"setBaseData\", { type: \"selectUserData\", data: user })\n        )\n        .catch(err => reject(err));\n    });\n  },\n  addDataOnGoodTable({ state, commit }, data) {\n    const pushedData = {\n      // id: Math.floor(Math.random() * Math.floor(20)),\n      title: data.goodName,\n      price: Number(data.goodPrice),\n      registrationDate: new Date(data.goodDate)\n    };\n    const newGoodArray = state.selectUserData.user_good.concat(pushedData);\n    commit(\"setSelectedData\", { type: \"user_good\", data: newGoodArray });\n    commit(\"setBaseModal\", { type: \"type\", data: \"onePerson\" });\n    // GOODSERVICE.addGoodDataOnUser({\n    //   owner_id: state.selectUserData.id,\n    //   ...pushedData\n    // });\n  },\n  editDataOnGoodTable({ state, commit }, data) {\n    const changeDataIndex = state.selectUserData.user_good.findIndex(\n      good => good.id === data.good_id\n    );\n    const pushedData = {\n      id: Math.floor(Math.random() * Math.floor(20)),\n      title: data.goodName,\n      price: Number(data.goodPrice),\n      registrationDate: new Date(data.goodDate)\n    };\n    state.selectUserData.user_good.splice(changeDataIndex, 1, pushedData);\n    commit(\"setBaseModal\", { type: \"type\", data: \"onePerson\" });\n  },\n  deleteOneGoodOnState({ state }, data) {\n    state.selectUserData.user_good.splice(data.index, 1);\n    GOODSERVICE.deleteOneGoodData(data.id)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  },\n  saveUserAllData({ state, commit }) {\n    return new Promise((resolve, reject) => {\n      USERSERVICE.updateUserAllData(state.selectUserData).then(res =>\n        console.log(res)\n      );\n      const changeDataIndex = state.userListData.users.findIndex(\n        user => user.id === state.selectUserData.id\n      );\n      commit(\"setSelectedData\", {\n        type: \"good_count\",\n        data: state.selectUserData.user_good.length\n      });\n      commit(\"setSelectedData\", {\n        type: \"total_price\",\n        data: state.selectUserData.user_good.reduce(\n          (prev, good) => prev + good.price,\n          0\n        )\n      });\n      commit(\"setSelectedData\", {\n        type: \"fullName\",\n        data: `${\n          state.selectUserData.lastName\n        }.${state.selectUserData.firstName.charAt(0)}${\n          state.selectUserData.middleName ? \".\" : \"\"\n        }${state.selectUserData.middleName.charAt(0)}`\n      });\n      state.userListData.users.splice(changeDataIndex, 1, state.selectUserData);\n      resolve();\n      reject();\n    });\n  }\n};\n\nexport default {\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]}]}