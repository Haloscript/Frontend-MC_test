{"remainingRequest":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/babel-loader/lib/index.js!/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/eslint-loader/index.js??ref--13-0!/Users/maxshevlyakov/myProjects/Frontend-MC_test/src/store/modules/base.js","dependencies":[{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/src/store/modules/base.js","mtime":1587064905859},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCB7IFVzZXJTZXJ2aWNlIH0gZnJvbSAiLi4vLi4vYXBwL3NlcnZpY2VzL1VzZXJTZXJ2aWNlIjsKdmFyIFVTRVJTRVJWSUNFID0gbmV3IFVzZXJTZXJ2aWNlKCk7CnZhciBzdGF0ZSA9IHsKICB1c2VyTGlzdERhdGE6IG51bGwsCiAgcGFnZTogMSwKICBhY3RpdmVJdGVtczogW10KfTsKdmFyIGdldHRlcnMgPSB7CiAgZ2V0QmFzZURhdGE6IGZ1bmN0aW9uIGdldEJhc2VEYXRhKHN0YXRlKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKG5hbWUpIHsKICAgICAgcmV0dXJuIHN0YXRlW25hbWVdOwogICAgfTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0QmFzZURhdGE6IGZ1bmN0aW9uIHNldEJhc2VEYXRhKHN0YXRlLCBfcmVmKSB7CiAgICB2YXIgdHlwZSA9IF9yZWYudHlwZSwKICAgICAgICBkYXRhID0gX3JlZi5kYXRhOwogICAgc3RhdGVbdHlwZV0gPSBkYXRhOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgZ2V0VGVuVXNlcnM6IGZ1bmN0aW9uIGdldFRlblVzZXJzKF9yZWYyKSB7CiAgICB2YXIgc3RhdGUgPSBfcmVmMi5zdGF0ZSwKICAgICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICB2YXIgc2VuZERhdGEgPSB7CiAgICAgICAgcGFnZTogc3RhdGUucGFnZQogICAgICB9OwogICAgICBVU0VSU0VSVklDRS5nZXRUZW5Vc2Vyc0RhdGEoc2VuZERhdGEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbW1pdCgic2V0QmFzZURhdGEiLCB7CiAgICAgICAgICB0eXBlOiAidXNlckxpc3REYXRhIiwKICAgICAgICAgIGRhdGE6IHJlcwogICAgICAgIH0pOwogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIHJldHVybiByZWplY3QoZXJyKTsKICAgICAgfSk7CiAgICB9KTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["/Users/maxshevlyakov/myProjects/Frontend-MC_test/src/store/modules/base.js"],"names":["UserService","USERSERVICE","state","userListData","page","activeItems","getters","getBaseData","name","mutations","setBaseData","type","data","actions","getTenUsers","commit","Promise","resolve","reject","sendData","getTenUsersData","then","res","catch","err"],"mappings":";AAAA,SAASA,WAAT,QAA4B,gCAA5B;AACA,IAAMC,WAAW,GAAG,IAAID,WAAJ,EAApB;AAEA,IAAME,KAAK,GAAG;AACZC,EAAAA,YAAY,EAAE,IADF;AAEZC,EAAAA,IAAI,EAAE,CAFM;AAGZC,EAAAA,WAAW,EAAE;AAHD,CAAd;AAKA,IAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,qBAAAL,KAAK;AAAA,WAAI,UAAAM,IAAI;AAAA,aAAIN,KAAK,CAACM,IAAD,CAAT;AAAA,KAAR;AAAA;AADJ,CAAhB;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,WADgB,uBACJR,KADI,QACmB;AAAA,QAAdS,IAAc,QAAdA,IAAc;AAAA,QAARC,IAAQ,QAARA,IAAQ;AACjCV,IAAAA,KAAK,CAACS,IAAD,CAAL,GAAcC,IAAd;AACD;AAHe,CAAlB;AAKA,IAAMC,OAAO,GAAG;AACdC,EAAAA,WADc,8BACiB;AAAA,QAAjBZ,KAAiB,SAAjBA,KAAiB;AAAA,QAAVa,MAAU,SAAVA,MAAU;AAC7B,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAMC,QAAQ,GAAG;AACff,QAAAA,IAAI,EAAEF,KAAK,CAACE;AADG,OAAjB;AAGAH,MAAAA,WAAW,CAACmB,eAAZ,CAA4BD,QAA5B,EACGE,IADH,CACQ,UAAAC,GAAG,EAAI;AACXP,QAAAA,MAAM,CAAC,aAAD,EAAgB;AAAEJ,UAAAA,IAAI,EAAE,cAAR;AAAwBC,UAAAA,IAAI,EAAEU;AAA9B,SAAhB,CAAN;AACAL,QAAAA,OAAO;AACR,OAJH,EAKGM,KALH,CAKS,UAAAC,GAAG;AAAA,eAAIN,MAAM,CAACM,GAAD,CAAV;AAAA,OALZ;AAMD,KAVM,CAAP;AAWD;AAba,CAAhB;AAgBA,eAAe;AACbtB,EAAAA,KAAK,EAALA,KADa;AAEbI,EAAAA,OAAO,EAAPA,OAFa;AAGbG,EAAAA,SAAS,EAATA,SAHa;AAIbI,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { UserService } from \"../../app/services/UserService\";\nconst USERSERVICE = new UserService();\n\nconst state = {\n  userListData: null,\n  page: 1,\n  activeItems: []\n};\nconst getters = {\n  getBaseData: state => name => state[name]\n};\nconst mutations = {\n  setBaseData(state, { type, data }) {\n    state[type] = data;\n  }\n};\nconst actions = {\n  getTenUsers({ state, commit }) {\n    return new Promise((resolve, reject) => {\n      const sendData = {\n        page: state.page\n      };\n      USERSERVICE.getTenUsersData(sendData)\n        .then(res => {\n          commit(\"setBaseData\", { type: \"userListData\", data: res });\n          resolve();\n        })\n        .catch(err => reject(err));\n    });\n  }\n};\n\nexport default {\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]}]}