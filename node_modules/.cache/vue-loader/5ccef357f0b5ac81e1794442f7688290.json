{"remainingRequest":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maxshevlyakov/myProjects/Frontend-MC_test/src/components/modals/editOnePersonModal.vue?vue&type=style&index=0&id=024589a5&scoped=true&lang=scss&","dependencies":[{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/src/components/modals/editOnePersonModal.vue","mtime":1587289482749},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maxshevlyakov/myProjects/Frontend-MC_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1vZGFsIHsKICB3aWR0aDogOTAlOwogICYgLmJ0biB7CiAgICBtYXJnaW46IDZweCAyMHB4OwogIH0KfQo="},{"version":3,"sources":["editOnePersonModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;AACA","file":"editOnePersonModal.vue","sourceRoot":"src/components/modals","sourcesContent":["<template>\n  <div>\n    <div id=\"modal1\" class=\"modal open modal-show\" tabindex=\"0\" style=\"\">\n      <div class=\"modal-content\">\n        <h4>Полная информация работника</h4>\n        <Preloader v-if=\"!dataOnForm\" />\n        <div v-else>\n          <customInput name=\"last_name\" title=\"Фамилия\" v-model=\"lastName\" />\n          <customInput name=\"firs_name\" title=\"Имя\" v-model=\"firstName\" />\n          <customInput\n            name=\"middle_name\"\n            title=\"Отчество\"\n            v-model=\"middleName\"\n          />\n          <customInput name=\"position\" title=\"Должность\" v-model=\"position\" />\n          <h4>Список выданных материальных ценностей:</h4>\n          <GoodTable :goodList=\"goodsList\" />\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button @click=\"$emit('close')\" class=\"waves-effect grey lighten-1 btn\">\n          Отмена\n        </button>\n        <button\n          @click=\"saveUserData()\"\n          class=\"waves-effect green lighten-1 btn\"\n        >\n          Сохранить\n        </button>\n      </div>\n    </div>\n    <div class=\"modal-overlay modal-background\"></div>\n  </div>\n</template>\n\n<script>\nimport Preloader from \"../preloader\";\nimport { mapGetters, mapMutations, mapActions } from \"vuex\";\nimport customInput from \"../form_elements/customInput\";\nimport GoodTable from \"../table/goodTable\";\nexport default {\n  name: \"editOnePersonalModal\",\n  components: {\n    GoodTable,\n    Preloader,\n    customInput\n  },\n  computed: {\n    ...mapGetters([\"getBaseData\", \"getBaseModal\", \"getSelectedData\"]),\n    dataOnForm() {\n      return this.getBaseData(\"selectUserData\") !== null;\n    },\n    lastName: {\n      get() {\n        return this.getSelectedData(\"lastName\");\n      },\n      set(value) {\n        this.setSelectedData({ type: \"lastName\", data: value });\n      }\n    },\n    firstName: {\n      get() {\n        return this.getSelectedData(\"firstName\");\n      },\n      set(value) {\n        this.setSelectedData({ type: \"firstName\", data: value });\n      }\n    },\n    middleName: {\n      get() {\n        return this.getSelectedData(\"middleName\");\n      },\n      set(value) {\n        this.setSelectedData({ type: \"middleName\", data: value });\n      }\n    },\n    position: {\n      get() {\n        return this.getSelectedData(\"position\");\n      },\n      set(value) {\n        this.setSelectedData({ type: \"position\", data: value });\n      }\n    },\n    goodsList: {\n      get() {\n        return this.getSelectedData(\"user_good\");\n      }\n    },\n    placeCall: {\n      get() {\n        return this.getBaseModal(\"placeCall\");\n      },\n      set(value) {\n        this.setBaseModal({ type: \"placeCall\", data: value });\n      }\n    }\n  },\n  created() {\n    this.placeCall = \"editUserModal\";\n  },\n  methods: {\n    ...mapMutations([\"setBaseData\", \"setSelectedData\", \"setBaseModal\"]),\n    ...mapActions([\"saveUserAllData\"]),\n    saveUserData() {\n      this.saveUserAllData().then(() => {\n        this.$emit(\"close\");\n      });\n    }\n  },\n  data() {\n    return {};\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.modal {\n  width: 90%;\n  & .btn {\n    margin: 6px 20px;\n  }\n}\n</style>\n"]}]}