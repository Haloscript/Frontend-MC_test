{"remainingRequest":"/var/www/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/src/views/content/MainTable.vue?vue&type=style&index=0&id=22e7b935&scoped=true&lang=scss&","dependencies":[{"path":"/var/www/src/views/content/MainTable.vue","mtime":1587354139000},{"path":"/var/www/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1haW4tdGFibGUgewogIHdpZHRoOiA4MDBweDsKICBtYXJnaW46IDAgYXV0bzsKICBwYWRkaW5nLXRvcDogNDBweDsKfQoubm8tY29udGVudCB7CiAgZGlzcGxheTogZmxleDsKICAmIC5fbG9hZGVyIHsKICAgIG1hcmdpbjogMjBweDsKICB9Cn0K"},{"version":3,"sources":["MainTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MainTable.vue","sourceRoot":"src/views/content","sourcesContent":["<template>\n  <div>\n    <div v-if=\"showContent\" class=\"main-table\">\n      <TableRow\n        :thead=\"true\"\n        :tableElement=\"staticData\"\n        @startingSort=\"sortingOnData\"\n      />\n      <TableRow\n        v-for=\"(user, index) in userListData.users\"\n        :tableElement=\"user\"\n        :key=\"user.id\"\n        :indexItem=\"index\"\n        @getFullInfo=\"openPersonModal\"\n        @getDelete=\"openDeleteModal\"\n      />\n      <Paginate\n        :currentPage=\"userListData.this_page\"\n        :pages=\"userListData.pages\"\n        @changePage=\"nextPage\"\n      />\n    </div>\n    <div v-else class=\"no-content\">\n      <h4>К сожалению таблица пуста</h4>\n      <CirclePreloader class=\"_loader\" />\n    </div>\n    <AddButton @addEvent=\"showModal = 'addUser'\" />\n    <MainModal />\n  </div>\n</template>\n\n<script>\nimport TableRow from \"../../components/table/UserTableRow\";\nimport { UserTable } from \"../../app/tableConfig\";\nimport { mapGetters, mapActions, mapMutations } from \"vuex\";\nimport MainModal from \"../../components/modals\";\nimport Paginate from \"../../components/Paginate\";\nimport CirclePreloader from \"../../components/circlePreloader\";\nimport AddButton from \"../../components/form_elements/CustomAddButton\";\nexport default {\n  name: \"Table\",\n  components: {\n    CirclePreloader,\n    Paginate,\n    TableRow,\n    MainModal,\n    AddButton\n  },\n  data() {\n    return {\n      staticData: UserTable,\n      showContent: false\n    };\n  },\n  created() {\n    Promise.all([this.getTenUsers()]).then(() => (this.showContent = true));\n  },\n\n  computed: {\n    ...mapGetters([\"getBaseData\", \"getBaseModal\"]),\n    userListData: {\n      get() {\n        return this.getBaseData(\"userListData\");\n      }\n    },\n    showModal: {\n      get() {\n        return this.getBaseModal(\"type\");\n      },\n      set(val) {\n        this.setBaseModal({ type: \"type\", data: val });\n      }\n    },\n    page: {\n      get() {\n        return this.getBaseData(\"page\");\n      },\n      set(value) {\n        this.setBaseData({ type: \"page\", data: value });\n      }\n    },\n    sortPrice: {\n      get() {\n        return this.getBaseData(\"sortPrice\");\n      },\n      set(value) {\n        this.setBaseData({ type: \"sortPrice\", data: value });\n      }\n    },\n    sortCount: {\n      get() {\n        return this.getBaseData(\"sortCount\");\n      },\n      set(value) {\n        this.setBaseData({ type: \"sortCount\", data: value });\n      }\n    },\n    sorted: {\n      get() {\n        return this.getBaseData(\"sorted\");\n      },\n      set(value) {\n        this.setBaseData({ type: \"sorted\", data: value });\n      }\n    },\n    editableData: {\n      get() {\n        return this.getBaseModal(\"editableData\");\n      },\n      set(value) {\n        this.setBaseModal({ type: \"editableData\", data: value });\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\"getTenUsers\", \"getOneUser\", \"deleteSelectUSerData\"]),\n    ...mapMutations([\"setBaseData\", \"setBaseModal\"]),\n\n    openPersonModal(id) {\n      this.getOneUser(id);\n      this.showModal = \"onePerson\";\n    },\n    openDeleteModal(id) {\n      this.editableData = { id: id, type: \"user\" };\n      this.showModal = \"delete\";\n    },\n    nextPage(pageNum) {\n      this.page = pageNum;\n      this.getTenUsers();\n    },\n    sortingOnData(data) {\n      if (data.type === \"count\") this.sortCount = data.value;\n      if (data.type === \"price\") this.sortPrice = data.value;\n      this.sorted = data.type;\n      this.getTenUsers(true);\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.main-table {\n  width: 800px;\n  margin: 0 auto;\n  padding-top: 40px;\n}\n.no-content {\n  display: flex;\n  & ._loader {\n    margin: 20px;\n  }\n}\n</style>\n"]}]}